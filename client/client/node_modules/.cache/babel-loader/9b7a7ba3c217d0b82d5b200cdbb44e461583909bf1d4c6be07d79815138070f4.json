{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIIT\\\\Documents\\\\project\\\\productivity_app\\\\client\\\\src\\\\components\\\\TaskItem.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useTasks } from '../contexts/TaskContext';\nimport { CheckIcon, TrashIcon, Pencil1Icon, ClockIcon, TimerIcon } from '@radix-ui/react-icons';\nimport { Dialog, DialogContent, DialogTitle } from '@radix-ui/react-dialog';\nimport { Tooltip, TooltipTrigger, TooltipContent } from '@radix-ui/react-tooltip';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst priorityColors = {\n  High: 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-100',\n  Medium: 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-100',\n  Low: 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-100'\n};\nconst categoryColors = {\n  Work: 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-100',\n  Personal: 'bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-100',\n  Study: 'bg-indigo-100 text-indigo-800 dark:bg-indigo-900 dark:text-indigo-100'\n};\nconst TaskItem = ({\n  task\n}) => {\n  _s();\n  const {\n    updateTask,\n    deleteTask,\n    startTimer,\n    stopTimer,\n    timeLeft,\n    isTimerRunning,\n    activeTaskId\n  } = useTasks();\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedTask, setEditedTask] = useState({\n    ...task\n  });\n  const [showTimerInput, setShowTimerInput] = useState(false);\n  const [timerDuration, setTimerDuration] = useState(25); // Default 25 minutes\n\n  const handleComplete = async () => {\n    await updateTask(task.id, {\n      completed: !task.completed\n    });\n    // Stop timer if completing the active task\n    if (activeTaskId === task.id && isTimerRunning) {\n      stopTimer();\n    }\n  };\n  const handleDelete = async () => {\n    await deleteTask(task.id);\n    // Stop timer if deleting the active task\n    if (activeTaskId === task.id && isTimerRunning) {\n      stopTimer();\n    }\n  };\n  const handleEdit = async () => {\n    await updateTask(task.id, editedTask);\n    setIsEditing(false);\n  };\n  const toggleTimer = () => {\n    if (isTimerRunning && activeTaskId === task.id) {\n      stopTimer();\n    } else {\n      setShowTimerInput(true);\n    }\n  };\n  const startTaskTimer = () => {\n    const durationInSeconds = timerDuration * 60;\n    startTimer(durationInSeconds, task.id);\n    setShowTimerInput(false);\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n  const formatDate = dateString => {\n    if (!dateString) return '';\n    const date = new Date(dateString);\n    return date.toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric',\n      year: 'numeric'\n    });\n  };\n\n  // Add timer display to the task meta section\n  const renderTimerStatus = () => {\n    if (activeTaskId === task.id) {\n      return /*#__PURE__*/_jsxDEV(Tooltip, {\n        children: [/*#__PURE__*/_jsxDEV(TooltipTrigger, {\n          asChild: true,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `task-tag ${isTimerRunning ? 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-100' : 'bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-200'}`,\n            children: [/*#__PURE__*/_jsxDEV(TimerIcon, {\n              className: \"inline mr-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), formatTime(timeLeft)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TooltipContent, {\n          className: \"tooltip-content\",\n          side: \"top\",\n          align: \"center\",\n          children: isTimerRunning ? 'Timer running' : 'Timer paused'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `task-item ${task.completed ? 'completed' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleComplete,\n          className: `task-checkbox ${task.completed ? 'completed' : ''}`,\n          \"aria-label\": task.completed ? 'Mark task incomplete' : 'Mark task complete',\n          children: task.completed && /*#__PURE__*/_jsxDEV(CheckIcon, {\n            className: \"check-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 32\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: `task-title ${task.completed ? 'completed' : ''}`,\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: toggleTimer,\n                className: `action-btn ${activeTaskId === task.id && isTimerRunning ? 'timer-active' : ''}`,\n                \"aria-label\": activeTaskId === task.id && isTimerRunning ? 'Stop timer' : 'Start timer',\n                children: /*#__PURE__*/_jsxDEV(TimerIcon, {\n                  className: \"action-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setIsEditing(true),\n                className: \"action-btn edit-btn\",\n                \"aria-label\": \"Edit task\",\n                children: /*#__PURE__*/_jsxDEV(Pencil1Icon, {\n                  className: \"action-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleDelete,\n                className: \"action-btn delete-btn\",\n                \"aria-label\": \"Delete task\",\n                children: /*#__PURE__*/_jsxDEV(TrashIcon, {\n                  className: \"action-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), task.description && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"task-description\",\n            children: task.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-meta\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: `task-tag ${priorityColors[task.priority]}`,\n              children: task.priority\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `task-tag ${categoryColors[task.category]}`,\n              children: task.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), task.dueDate && /*#__PURE__*/_jsxDEV(Tooltip, {\n              children: [/*#__PURE__*/_jsxDEV(TooltipTrigger, {\n                asChild: true,\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"task-due-date\",\n                  children: [/*#__PURE__*/_jsxDEV(ClockIcon, {\n                    className: \"due-date-icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 23\n                  }, this), formatDate(task.dueDate)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TooltipContent, {\n                className: \"tooltip-content\",\n                side: \"top\",\n                align: \"center\",\n                children: [\"Due on \", new Date(task.dueDate).toLocaleDateString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this), renderTimerStatus()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isEditing,\n      onOpenChange: setIsEditing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: showTimerInput,\n      onOpenChange: setShowTimerInput,\n      children: /*#__PURE__*/_jsxDEV(DialogContent, {\n        className: \"timer-dialog\",\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          className: \"dialog-title\",\n          children: \"Set Timer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dialog-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Duration (minutes)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              min: \"1\",\n              max: \"120\",\n              value: timerDuration,\n              onChange: e => setTimerDuration(Math.max(1, Math.min(120, parseInt(e.target.value) || 25))),\n              className: \"form-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dialog-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowTimerInput(false),\n              className: \"cancel-btn\",\n              type: \"button\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: startTaskTimer,\n              className: \"save-btn\",\n              type: \"button\",\n              children: \"Start Timer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskItem, \"F4FbygY1GgBCLwHqRalO6jqp1o4=\", false, function () {\n  return [useTasks];\n});\n_c = TaskItem;\nexport default TaskItem;\nvar _c;\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"names":["React","useState","useEffect","useTasks","CheckIcon","TrashIcon","Pencil1Icon","ClockIcon","TimerIcon","Dialog","DialogContent","DialogTitle","Tooltip","TooltipTrigger","TooltipContent","jsxDEV","_jsxDEV","priorityColors","High","Medium","Low","categoryColors","Work","Personal","Study","TaskItem","task","_s","updateTask","deleteTask","startTimer","stopTimer","timeLeft","isTimerRunning","activeTaskId","isEditing","setIsEditing","editedTask","setEditedTask","showTimerInput","setShowTimerInput","timerDuration","setTimerDuration","handleComplete","id","completed","handleDelete","handleEdit","toggleTimer","startTaskTimer","durationInSeconds","formatTime","seconds","mins","Math","floor","secs","toString","padStart","formatDate","dateString","date","Date","toLocaleDateString","month","day","year","renderTimerStatus","children","asChild","className","fileName","_jsxFileName","lineNumber","columnNumber","side","align","onClick","title","description","priority","category","dueDate","open","onOpenChange","type","min","max","value","onChange","e","parseInt","target","_c","$RefreshReg$"],"sources":["C:/Users/KIIT/Documents/project/productivity_app/client/src/components/TaskItem.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useTasks } from '../contexts/TaskContext';\r\nimport { CheckIcon, TrashIcon, Pencil1Icon, ClockIcon, TimerIcon } from '@radix-ui/react-icons';\r\nimport { Dialog, DialogContent, DialogTitle } from '@radix-ui/react-dialog';\r\nimport { Tooltip, TooltipTrigger, TooltipContent } from '@radix-ui/react-tooltip';\r\n\r\nconst priorityColors = {\r\n  High: 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-100',\r\n  Medium: 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-100',\r\n  Low: 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-100'\r\n};\r\n\r\nconst categoryColors = {\r\n  Work: 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-100',\r\n  Personal: 'bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-100',\r\n  Study: 'bg-indigo-100 text-indigo-800 dark:bg-indigo-900 dark:text-indigo-100'\r\n};\r\n\r\nconst TaskItem = ({ task }) => {\r\n  const { \r\n    updateTask, \r\n    deleteTask, \r\n    startTimer, \r\n    stopTimer, \r\n    timeLeft, \r\n    isTimerRunning, \r\n    activeTaskId \r\n  } = useTasks();\r\n  \r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editedTask, setEditedTask] = useState({ ...task });\r\n  const [showTimerInput, setShowTimerInput] = useState(false);\r\n  const [timerDuration, setTimerDuration] = useState(25); // Default 25 minutes\r\n\r\n  const handleComplete = async () => {\r\n    await updateTask(task.id, { completed: !task.completed });\r\n    // Stop timer if completing the active task\r\n    if (activeTaskId === task.id && isTimerRunning) {\r\n      stopTimer();\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    await deleteTask(task.id);\r\n    // Stop timer if deleting the active task\r\n    if (activeTaskId === task.id && isTimerRunning) {\r\n      stopTimer();\r\n    }\r\n  };\r\n\r\n  const handleEdit = async () => {\r\n    await updateTask(task.id, editedTask);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const toggleTimer = () => {\r\n    if (isTimerRunning && activeTaskId === task.id) {\r\n      stopTimer();\r\n    } else {\r\n      setShowTimerInput(true);\r\n    }\r\n  };\r\n\r\n  const startTaskTimer = () => {\r\n    const durationInSeconds = timerDuration * 60;\r\n    startTimer(durationInSeconds, task.id);\r\n    setShowTimerInput(false);\r\n  };\r\n\r\n  const formatTime = (seconds) => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return '';\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString('en-US', { \r\n      month: 'short', \r\n      day: 'numeric',\r\n      year: 'numeric'\r\n    });\r\n  };\r\n\r\n  // Add timer display to the task meta section\r\n  const renderTimerStatus = () => {\r\n    if (activeTaskId === task.id) {\r\n      return (\r\n        <Tooltip>\r\n          <TooltipTrigger asChild>\r\n            <span className={`task-tag ${isTimerRunning ? 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-100' : 'bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-200'}`}>\r\n              <TimerIcon className=\"inline mr-1\" />\r\n              {formatTime(timeLeft)}\r\n            </span>\r\n          </TooltipTrigger>\r\n          <TooltipContent className=\"tooltip-content\" side=\"top\" align=\"center\">\r\n            {isTimerRunning ? 'Timer running' : 'Timer paused'}\r\n          </TooltipContent>\r\n        </Tooltip>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <div className={`task-item ${task.completed ? 'completed' : ''}`}>\r\n      <div className=\"task-content\">\r\n        <div className=\"task-main\">\r\n          <button\r\n            onClick={handleComplete}\r\n            className={`task-checkbox ${task.completed ? 'completed' : ''}`}\r\n            aria-label={task.completed ? 'Mark task incomplete' : 'Mark task complete'}\r\n          >\r\n            {task.completed && <CheckIcon className=\"check-icon\" />}\r\n          </button>\r\n          \r\n          <div className=\"task-details\">\r\n            <div className=\"task-header\">\r\n              <h3 className={`task-title ${task.completed ? 'completed' : ''}`}>\r\n                {task.title}\r\n              </h3>\r\n              <div className=\"task-actions\">\r\n                <button\r\n                  onClick={toggleTimer}\r\n                  className={`action-btn ${activeTaskId === task.id && isTimerRunning ? 'timer-active' : ''}`}\r\n                  aria-label={activeTaskId === task.id && isTimerRunning ? 'Stop timer' : 'Start timer'}\r\n                >\r\n                  <TimerIcon className=\"action-icon\" />\r\n                </button>\r\n                <button\r\n                  onClick={() => setIsEditing(true)}\r\n                  className=\"action-btn edit-btn\"\r\n                  aria-label=\"Edit task\"\r\n                >\r\n                  <Pencil1Icon className=\"action-icon\" />\r\n                </button>\r\n                <button\r\n                  onClick={handleDelete}\r\n                  className=\"action-btn delete-btn\"\r\n                  aria-label=\"Delete task\"\r\n                >\r\n                  <TrashIcon className=\"action-icon\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n            \r\n            {task.description && (\r\n              <p className=\"task-description\">{task.description}</p>\r\n            )}\r\n            \r\n            <div className=\"task-meta\">\r\n              <span className={`task-tag ${priorityColors[task.priority]}`}>\r\n                {task.priority}\r\n              </span>\r\n              <span className={`task-tag ${categoryColors[task.category]}`}>\r\n                {task.category}\r\n              </span>\r\n              {task.dueDate && (\r\n                <Tooltip>\r\n                  <TooltipTrigger asChild>\r\n                    <span className=\"task-due-date\">\r\n                      <ClockIcon className=\"due-date-icon\" />\r\n                      {formatDate(task.dueDate)}\r\n                    </span>\r\n                  </TooltipTrigger>\r\n                  <TooltipContent className=\"tooltip-content\" side=\"top\" align=\"center\">\r\n                    Due on {new Date(task.dueDate).toLocaleDateString()}\r\n                  </TooltipContent>\r\n                </Tooltip>\r\n              )}\r\n              {renderTimerStatus()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Edit Dialog - keep this exactly as is */}\r\n      <Dialog open={isEditing} onOpenChange={setIsEditing}>\r\n        {/* ... existing edit dialog code ... */}\r\n      </Dialog>\r\n\r\n      {/* Timer Input Dialog */}\r\n      <Dialog open={showTimerInput} onOpenChange={setShowTimerInput}>\r\n        <DialogContent className=\"timer-dialog\">\r\n          <DialogTitle className=\"dialog-title\">Set Timer</DialogTitle>\r\n          <div className=\"dialog-form\">\r\n            <div className=\"form-group\">\r\n              <label className=\"form-label\">Duration (minutes)</label>\r\n              <input\r\n                type=\"number\"\r\n                min=\"1\"\r\n                max=\"120\"\r\n                value={timerDuration}\r\n                onChange={(e) => setTimerDuration(Math.max(1, Math.min(120, parseInt(e.target.value) || 25)))}\r\n                className=\"form-input\"\r\n              />\r\n            </div>\r\n            <div className=\"dialog-actions\">\r\n              <button\r\n                onClick={() => setShowTimerInput(false)}\r\n                className=\"cancel-btn\"\r\n                type=\"button\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                onClick={startTaskTimer}\r\n                className=\"save-btn\"\r\n                type=\"button\"\r\n              >\r\n                Start Timer\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskItem;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}