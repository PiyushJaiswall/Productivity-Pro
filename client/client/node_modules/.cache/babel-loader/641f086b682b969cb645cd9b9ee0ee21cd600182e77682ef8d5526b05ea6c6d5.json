{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIIT\\\\Documents\\\\project\\\\productivity_app\\\\client\\\\src\\\\components\\\\PomodoroTimer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useTasks } from '../contexts/TaskContext';\nimport { PlayIcon, PauseIcon, ResetIcon } from '@radix-ui/react-icons';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PomodoroTimer = () => {\n  _s();\n  const {\n    logSession\n  } = useTasks();\n  const [mode, setMode] = useState('focus'); // 'focus' or 'break'\n  const [isRunning, setIsRunning] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(25 * 60); // 25 minutes in seconds\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [breakDuration, setBreakDuration] = useState(5);\n  const [cycles, setCycles] = useState(0);\n  const audioRef = useRef(null);\n  useEffect(() => {\n    setTimeLeft(mode === 'focus' ? focusDuration * 60 : breakDuration * 60);\n  }, [mode, focusDuration, breakDuration]);\n  useEffect(() => {\n    let interval;\n    if (isRunning && timeLeft > 0) {\n      interval = setInterval(() => {\n        setTimeLeft(prev => prev - 1);\n      }, 1000);\n    } else if (isRunning && timeLeft === 0) {\n      // Timer completed\n      audioRef.current.play();\n      const sessionType = mode;\n      const sessionDuration = mode === 'focus' ? focusDuration : breakDuration;\n      logSession({\n        type: sessionType,\n        duration: sessionDuration\n      });\n\n      // Switch mode\n      setMode(prev => prev === 'focus' ? 'break' : 'focus');\n      setTimeLeft(mode === 'focus' ? breakDuration * 60 : focusDuration * 60);\n      if (mode === 'focus') {\n        setCycles(prev => prev + 1);\n      }\n    }\n    return () => clearInterval(interval);\n  }, [isRunning, timeLeft, mode, focusDuration, breakDuration, logSession]);\n  const toggleTimer = () => {\n    setIsRunning(!isRunning);\n  };\n  const resetTimer = () => {\n    setIsRunning(false);\n    setTimeLeft(mode === 'focus' ? focusDuration * 60 : breakDuration * 60);\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n  const progress = timeLeft / (mode === 'focus' ? focusDuration * 60 : breakDuration * 60) * 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timer-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: mode === 'focus' ? 'Focus Time' : 'Break Time'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer-circle\",\n      style: {\n        background: `conic-gradient(${mode === 'focus' ? 'var(--primary)' : 'var(--accent)'} ${progress}%, transparent ${progress}%)`\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer-display\",\n        children: formatTime(timeLeft)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleTimer,\n        className: \"timer-btn primary\",\n        children: isRunning ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(PauseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), \" Pause\"]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(PlayIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), \" Start\"]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetTimer,\n        className: \"timer-btn secondary\",\n        children: [/*#__PURE__*/_jsxDEV(ResetIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), \" Reset\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(PomodoroTimer, \"X4CeHp4YKBIhuFKUNaP+QrXHdUE=\", false, function () {\n  return [useTasks];\n});\n_c = PomodoroTimer;\nvar _c;\n$RefreshReg$(_c, \"PomodoroTimer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useTasks","PlayIcon","PauseIcon","ResetIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","PomodoroTimer","_s","logSession","mode","setMode","isRunning","setIsRunning","timeLeft","setTimeLeft","focusDuration","setFocusDuration","breakDuration","setBreakDuration","cycles","setCycles","audioRef","interval","setInterval","prev","current","play","sessionType","sessionDuration","type","duration","clearInterval","toggleTimer","resetTimer","formatTime","seconds","mins","Math","floor","secs","toString","padStart","progress","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","background","onClick","_c","$RefreshReg$"],"sources":["C:/Users/KIIT/Documents/project/productivity_app/client/src/components/PomodoroTimer.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useTasks } from '../contexts/TaskContext';\r\nimport { PlayIcon, PauseIcon, ResetIcon } from '@radix-ui/react-icons';\r\n\r\nconst PomodoroTimer = () => {\r\n  const { logSession } = useTasks();\r\n  const [mode, setMode] = useState('focus'); // 'focus' or 'break'\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [timeLeft, setTimeLeft] = useState(25 * 60); // 25 minutes in seconds\r\n  const [focusDuration, setFocusDuration] = useState(25);\r\n  const [breakDuration, setBreakDuration] = useState(5);\r\n  const [cycles, setCycles] = useState(0);\r\n  const audioRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    setTimeLeft(mode === 'focus' ? focusDuration * 60 : breakDuration * 60);\r\n  }, [mode, focusDuration, breakDuration]);\r\n\r\n  useEffect(() => {\r\n    let interval;\r\n    if (isRunning && timeLeft > 0) {\r\n      interval = setInterval(() => {\r\n        setTimeLeft(prev => prev - 1);\r\n      }, 1000);\r\n    } else if (isRunning && timeLeft === 0) {\r\n      // Timer completed\r\n      audioRef.current.play();\r\n      const sessionType = mode;\r\n      const sessionDuration = mode === 'focus' ? focusDuration : breakDuration;\r\n      \r\n      logSession({\r\n        type: sessionType,\r\n        duration: sessionDuration\r\n      });\r\n\r\n      // Switch mode\r\n      setMode(prev => prev === 'focus' ? 'break' : 'focus');\r\n      setTimeLeft(mode === 'focus' ? breakDuration * 60 : focusDuration * 60);\r\n      \r\n      if (mode === 'focus') {\r\n        setCycles(prev => prev + 1);\r\n      }\r\n    }\r\n    return () => clearInterval(interval);\r\n  }, [isRunning, timeLeft, mode, focusDuration, breakDuration, logSession]);\r\n\r\n  const toggleTimer = () => {\r\n    setIsRunning(!isRunning);\r\n  };\r\n\r\n  const resetTimer = () => {\r\n    setIsRunning(false);\r\n    setTimeLeft(mode === 'focus' ? focusDuration * 60 : breakDuration * 60);\r\n  };\r\n\r\n  const formatTime = (seconds) => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  const progress = (timeLeft / (mode === 'focus' ? focusDuration * 60 : breakDuration * 60)) * 100;\r\n\r\n  return (\r\n    <div className=\"timer-container\">\r\n      <h2>{mode === 'focus' ? 'Focus Time' : 'Break Time'}</h2>\r\n      \r\n      <div className=\"timer-circle\" style={{\r\n        background: `conic-gradient(${\r\n          mode === 'focus' ? 'var(--primary)' : 'var(--accent)'\r\n        } ${progress}%, transparent ${progress}%)`\r\n      }}>\r\n        <div className=\"timer-display\">\r\n          {formatTime(timeLeft)}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"timer-controls\">\r\n        <button onClick={toggleTimer} className=\"timer-btn primary\">\r\n          {isRunning ? (\r\n            <>\r\n              <PauseIcon /> Pause\r\n            </>\r\n          ) : (\r\n            <>\r\n              <PlayIcon /> Start\r\n            </>\r\n          )}\r\n        </button>\r\n        <button onClick={resetTimer} className=\"timer-btn secondary\">\r\n          <ResetIcon /> Reset\r\n        </button>\r\n      </div>\r\n\r\n      {/* Timer settings controls... */}\r\n    </div>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}